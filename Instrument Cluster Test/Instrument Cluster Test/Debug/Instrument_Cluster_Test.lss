
Instrument_Cluster_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000025e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001529  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f2  00000000  00000000  000018ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000811  00000000  00000000  000020df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000184  00000000  00000000  000028f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005a4  00000000  00000000  00002a74  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ca5  00000000  00000000  00003018  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00003cbd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 c3 00 	call	0x186	; 0x186 <main>
  9e:	0c 94 2d 01 	jmp	0x25a	; 0x25a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <twi_init>:
		LCD_char(0xFF);
		_delay_ms(30);
	}
	_delay_ms(1000); //Wait a sec before clearing
	LCD_clr();
}
  a6:	e4 e6       	ldi	r30, 0x64	; 100
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8f 77       	andi	r24, 0x7F	; 127
  ae:	80 83       	st	Z, r24
  b0:	ec eb       	ldi	r30, 0xBC	; 188
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	80 83       	st	Z, r24
  ba:	e9 eb       	ldi	r30, 0xB9	; 185
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	8e 7f       	andi	r24, 0xFE	; 254
  c2:	80 83       	st	Z, r24
  c4:	88 e4       	ldi	r24, 0x48	; 72
  c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  ca:	08 95       	ret

000000cc <twi_start>:
  cc:	94 ea       	ldi	r25, 0xA4	; 164
  ce:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  d2:	ec eb       	ldi	r30, 0xBC	; 188
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	90 81       	ld	r25, Z
  d8:	99 23       	and	r25, r25
  da:	ec f7       	brge	.-6      	; 0xd6 <twi_start+0xa>
  dc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  e0:	88 0f       	add	r24, r24
  e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  e6:	84 e8       	ldi	r24, 0x84	; 132
  e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  ec:	ec eb       	ldi	r30, 0xBC	; 188
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	88 23       	and	r24, r24
  f4:	ec f7       	brge	.-6      	; 0xf0 <twi_start+0x24>
  f6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  fa:	08 95       	ret

000000fc <twi_write>:
  fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 100:	84 e8       	ldi	r24, 0x84	; 132
 102:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 106:	ec eb       	ldi	r30, 0xBC	; 188
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	88 23       	and	r24, r24
 10e:	ec f7       	brge	.-6      	; 0x10a <twi_write+0xe>
 110:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 114:	08 95       	ret

00000116 <timer_Init>:
 116:	82 e0       	ldi	r24, 0x02	; 2
 118:	84 bd       	out	0x24, r24	; 36
 11a:	96 e0       	ldi	r25, 0x06	; 6
 11c:	97 bd       	out	0x27, r25	; 39
 11e:	ee e6       	ldi	r30, 0x6E	; 110
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 83       	st	Z, r24
 124:	78 94       	sei
 126:	84 e0       	ldi	r24, 0x04	; 4
 128:	85 bd       	out	0x25, r24	; 37
 12a:	14 bc       	out	0x24, r1	; 36
 12c:	15 bc       	out	0x25, r1	; 37
 12e:	16 bc       	out	0x26, r1	; 38
 130:	8f e9       	ldi	r24, 0x9F	; 159
 132:	87 bd       	out	0x27, r24	; 39
 134:	85 b5       	in	r24, 0x25	; 37
 136:	82 60       	ori	r24, 0x02	; 2
 138:	85 bd       	out	0x25, r24	; 37
 13a:	85 b5       	in	r24, 0x25	; 37
 13c:	81 60       	ori	r24, 0x01	; 1
 13e:	85 bd       	out	0x25, r24	; 37
 140:	80 81       	ld	r24, Z
 142:	82 60       	ori	r24, 0x02	; 2
 144:	80 83       	st	Z, r24
 146:	78 94       	sei
 148:	08 95       	ret

0000014a <rpm_write>:
 14a:	0f 93       	push	r16
 14c:	1f 93       	push	r17
 14e:	cf 93       	push	r28
 150:	df 93       	push	r29
 152:	c8 2f       	mov	r28, r24
 154:	09 2f       	mov	r16, r25
 156:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_init>
 15a:	82 e7       	ldi	r24, 0x72	; 114
 15c:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 160:	8c 2f       	mov	r24, r28
 162:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 166:	cc eb       	ldi	r28, 0xBC	; 188
 168:	d0 e0       	ldi	r29, 0x00	; 0
 16a:	14 e9       	ldi	r17, 0x94	; 148
 16c:	18 83       	st	Y, r17
 16e:	84 e7       	ldi	r24, 0x74	; 116
 170:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 174:	80 2f       	mov	r24, r16
 176:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 17a:	18 83       	st	Y, r17
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	1f 91       	pop	r17
 182:	0f 91       	pop	r16
 184:	08 95       	ret

00000186 <main>:
LCD_D6 = (1<<D6), //(1<<6)
LCD_D7 = (1<<D7); //(1<<7)

int main(void)
{
	twi_init();
 186:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_init>
	timer_Init();
 18a:	0e 94 8b 00 	call	0x116	; 0x116 <timer_Init>
	error();
}

void twi_stop(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);  //Transmit STOP condition
 18e:	0c eb       	ldi	r16, 0xBC	; 188
 190:	10 e0       	ldi	r17, 0x00	; 0
 192:	c4 e9       	ldi	r28, 0x94	; 148
    /* Replace with your application code */
    while (1) 
    {
	//test RPM Bar
	rpm_write(0x0); //clear bar
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 a5 00 	call	0x14a	; 0x14a <rpm_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19c:	2f e7       	ldi	r18, 0x7F	; 127
 19e:	84 e8       	ldi	r24, 0x84	; 132
 1a0:	9e e1       	ldi	r25, 0x1E	; 30
 1a2:	21 50       	subi	r18, 0x01	; 1
 1a4:	80 40       	sbci	r24, 0x00	; 0
 1a6:	90 40       	sbci	r25, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0x1c>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x26>
 1ac:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b1010101010101010); //turn on odd leds
 1ae:	8a ea       	ldi	r24, 0xAA	; 170
 1b0:	9a ea       	ldi	r25, 0xAA	; 170
 1b2:	0e 94 a5 00 	call	0x14a	; 0x14a <rpm_write>
 1b6:	ef e7       	ldi	r30, 0x7F	; 127
 1b8:	f4 e8       	ldi	r31, 0x84	; 132
 1ba:	2e e1       	ldi	r18, 0x1E	; 30
 1bc:	e1 50       	subi	r30, 0x01	; 1
 1be:	f0 40       	sbci	r31, 0x00	; 0
 1c0:	20 40       	sbci	r18, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x36>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x40>
 1c6:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b0101010101010101); //turn on even leds
 1c8:	85 e5       	ldi	r24, 0x55	; 85
 1ca:	95 e5       	ldi	r25, 0x55	; 85
 1cc:	0e 94 a5 00 	call	0x14a	; 0x14a <rpm_write>
 1d0:	8f e7       	ldi	r24, 0x7F	; 127
 1d2:	94 e8       	ldi	r25, 0x84	; 132
 1d4:	ee e1       	ldi	r30, 0x1E	; 30
 1d6:	81 50       	subi	r24, 0x01	; 1
 1d8:	90 40       	sbci	r25, 0x00	; 0
 1da:	e0 40       	sbci	r30, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <main+0x50>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x5a>
 1e0:	00 00       	nop
		rgb_set(i, BLACK);
	}
	*/

	//test LED indicators
	twi_start(LED_INDICATORS);
 1e2:	86 e7       	ldi	r24, 0x76	; 118
 1e4:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
	twi_write(0b00000001);
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 1ee:	f8 01       	movw	r30, r16
 1f0:	c0 83       	st	Z, r28
 1f2:	ff e7       	ldi	r31, 0x7F	; 127
 1f4:	24 e8       	ldi	r18, 0x84	; 132
 1f6:	8e e1       	ldi	r24, 0x1E	; 30
 1f8:	f1 50       	subi	r31, 0x01	; 1
 1fa:	20 40       	sbci	r18, 0x00	; 0
 1fc:	80 40       	sbci	r24, 0x00	; 0
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <main+0x72>
 200:	00 c0       	rjmp	.+0      	; 0x202 <main+0x7c>
 202:	00 00       	nop
	twi_stop();

	_delay_ms(500);

	twi_start(LED_INDICATORS);
 204:	86 e7       	ldi	r24, 0x76	; 118
 206:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
	twi_write(0b00000011);
 20a:	83 e0       	ldi	r24, 0x03	; 3
 20c:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 210:	f8 01       	movw	r30, r16
 212:	c0 83       	st	Z, r28
 214:	ff e7       	ldi	r31, 0x7F	; 127
 216:	24 e8       	ldi	r18, 0x84	; 132
 218:	8e e1       	ldi	r24, 0x1E	; 30
 21a:	f1 50       	subi	r31, 0x01	; 1
 21c:	20 40       	sbci	r18, 0x00	; 0
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0x94>
 222:	00 c0       	rjmp	.+0      	; 0x224 <main+0x9e>
 224:	00 00       	nop
	twi_stop();

	_delay_ms(500);

	twi_start(LED_INDICATORS);
 226:	86 e7       	ldi	r24, 0x76	; 118
 228:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
	twi_write(0b00000010);
 22c:	82 e0       	ldi	r24, 0x02	; 2
 22e:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 232:	f8 01       	movw	r30, r16
 234:	c0 83       	st	Z, r28
 236:	ff e7       	ldi	r31, 0x7F	; 127
 238:	24 e8       	ldi	r18, 0x84	; 132
 23a:	8e e1       	ldi	r24, 0x1E	; 30
 23c:	f1 50       	subi	r31, 0x01	; 1
 23e:	20 40       	sbci	r18, 0x00	; 0
 240:	80 40       	sbci	r24, 0x00	; 0
 242:	e1 f7       	brne	.-8      	; 0x23c <main+0xb6>
 244:	00 c0       	rjmp	.+0      	; 0x246 <main+0xc0>
 246:	00 00       	nop
	twi_stop();

	_delay_ms(500);

	twi_start(LED_INDICATORS);	
 248:	86 e7       	ldi	r24, 0x76	; 118
 24a:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
	twi_write(0b00000000);
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 254:	f8 01       	movw	r30, r16
 256:	c0 83       	st	Z, r28
 258:	9d cf       	rjmp	.-198    	; 0x194 <main+0xe>

0000025a <_exit>:
 25a:	f8 94       	cli

0000025c <__stop_program>:
 25c:	ff cf       	rjmp	.-2      	; 0x25c <__stop_program>
