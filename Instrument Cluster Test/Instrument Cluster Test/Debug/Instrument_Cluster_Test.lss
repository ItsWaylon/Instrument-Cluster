
Instrument_Cluster_Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  000004e2  00000576  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080011a  0080011a  00000590  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017e5  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007fb  00000000  00000000  00001e8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008e7  00000000  00000000  00002688  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00002f70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059d  00000000  00000000  00003184  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001007  00000000  00000000  00003721  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004728  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ee       	ldi	r30, 0xE2	; 226
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 31       	cpi	r26, 0x1A	; 26
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e1       	ldi	r26, 0x1A	; 26
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 31       	cpi	r26, 0x1F	; 31
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b9 01 	call	0x372	; 0x372 <main>
  9e:	0c 94 6f 02 	jmp	0x4de	; 0x4de <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <twi_init>:
		LCD_char(0xFF);
		_delay_ms(30);
	}
	_delay_ms(1000); //Wait a sec before clearing
	LCD_clr();
}
  a6:	e4 e6       	ldi	r30, 0x64	; 100
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	8f 77       	andi	r24, 0x7F	; 127
  ae:	80 83       	st	Z, r24
  b0:	ec eb       	ldi	r30, 0xBC	; 188
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	80 83       	st	Z, r24
  ba:	e9 eb       	ldi	r30, 0xB9	; 185
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	8e 7f       	andi	r24, 0xFE	; 254
  c2:	80 83       	st	Z, r24
  c4:	88 e4       	ldi	r24, 0x48	; 72
  c6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  ca:	08 95       	ret

000000cc <twi_start>:
  cc:	94 ea       	ldi	r25, 0xA4	; 164
  ce:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  d2:	ec eb       	ldi	r30, 0xBC	; 188
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	90 81       	ld	r25, Z
  d8:	99 23       	and	r25, r25
  da:	ec f7       	brge	.-6      	; 0xd6 <twi_start+0xa>
  dc:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  e0:	88 0f       	add	r24, r24
  e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  e6:	84 e8       	ldi	r24, 0x84	; 132
  e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  ec:	ec eb       	ldi	r30, 0xBC	; 188
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	88 23       	and	r24, r24
  f4:	ec f7       	brge	.-6      	; 0xf0 <twi_start+0x24>
  f6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  fa:	08 95       	ret

000000fc <twi_write>:
  fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 100:	84 e8       	ldi	r24, 0x84	; 132
 102:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 106:	ec eb       	ldi	r30, 0xBC	; 188
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	88 23       	and	r24, r24
 10e:	ec f7       	brge	.-6      	; 0x10a <twi_write+0xe>
 110:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 114:	08 95       	ret

00000116 <__vector_14>:
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	9f 92       	push	r9
 122:	af 92       	push	r10
 124:	bf 92       	push	r11
 126:	cf 92       	push	r12
 128:	df 92       	push	r13
 12a:	ef 92       	push	r14
 12c:	ff 92       	push	r15
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	2f 93       	push	r18
 134:	3f 93       	push	r19
 136:	4f 93       	push	r20
 138:	5f 93       	push	r21
 13a:	6f 93       	push	r22
 13c:	7f 93       	push	r23
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	af 93       	push	r26
 144:	bf 93       	push	r27
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ef 93       	push	r30
 14c:	ff 93       	push	r31
 14e:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <timerTick>
 152:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <timerTick+0x1>
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <timerTick+0x1>
 15c:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <timerTick>
 160:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <timerTick>
 164:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <timerTick+0x1>
 168:	84 36       	cpi	r24, 0x64	; 100
 16a:	91 05       	cpc	r25, r1
 16c:	0c f4       	brge	.+2      	; 0x170 <__vector_14+0x5a>
 16e:	6b c0       	rjmp	.+214    	; 0x246 <__vector_14+0x130>
 170:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <timerTick+0x1>
 174:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <timerTick>
 178:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <bitstate+0x1>
 17c:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <bitstate>
 180:	80 e2       	ldi	r24, 0x20	; 32
 182:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 186:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <bitstate>
 18a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <bitstate+0x1>
 18e:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 192:	84 e9       	ldi	r24, 0x94	; 148
 194:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 198:	56 c0       	rjmp	.+172    	; 0x246 <__vector_14+0x130>
 19a:	f7 01       	movw	r30, r14
 19c:	21 91       	ld	r18, Z+
 19e:	31 91       	ld	r19, Z+
 1a0:	7f 01       	movw	r14, r30
 1a2:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <timerTick>
 1a6:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <timerTick+0x1>
 1aa:	28 17       	cp	r18, r24
 1ac:	39 07       	cpc	r19, r25
 1ae:	e1 f4       	brne	.+56     	; 0x1e8 <__vector_14+0xd2>
 1b0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <bitstate>
 1b4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <bitstate+0x1>
 1b8:	95 01       	movw	r18, r10
 1ba:	0c 2e       	mov	r0, r28
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <__vector_14+0xac>
 1be:	22 0f       	add	r18, r18
 1c0:	33 1f       	adc	r19, r19
 1c2:	0a 94       	dec	r0
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <__vector_14+0xa8>
 1c6:	82 2b       	or	r24, r18
 1c8:	93 2b       	or	r25, r19
 1ca:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <bitstate+0x1>
 1ce:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <bitstate>
 1d2:	80 e2       	ldi	r24, 0x20	; 32
 1d4:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 1d8:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <bitstate>
 1dc:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <bitstate+0x1>
 1e0:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 1e4:	f6 01       	movw	r30, r12
 1e6:	90 82       	st	Z, r9
 1e8:	f8 01       	movw	r30, r16
 1ea:	21 91       	ld	r18, Z+
 1ec:	31 91       	ld	r19, Z+
 1ee:	8f 01       	movw	r16, r30
 1f0:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <timerTick>
 1f4:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <timerTick+0x1>
 1f8:	28 17       	cp	r18, r24
 1fa:	39 07       	cpc	r19, r25
 1fc:	f1 f4       	brne	.+60     	; 0x23a <__vector_14+0x124>
 1fe:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <bitstate>
 202:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <bitstate+0x1>
 206:	9e 01       	movw	r18, r28
 208:	2b 5f       	subi	r18, 0xFB	; 251
 20a:	3f 4f       	sbci	r19, 0xFF	; 255
 20c:	a5 01       	movw	r20, r10
 20e:	02 c0       	rjmp	.+4      	; 0x214 <__vector_14+0xfe>
 210:	44 0f       	add	r20, r20
 212:	55 1f       	adc	r21, r21
 214:	2a 95       	dec	r18
 216:	e2 f7       	brpl	.-8      	; 0x210 <__vector_14+0xfa>
 218:	84 2b       	or	r24, r20
 21a:	95 2b       	or	r25, r21
 21c:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <bitstate+0x1>
 220:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <bitstate>
 224:	80 e2       	ldi	r24, 0x20	; 32
 226:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 22a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <bitstate>
 22e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <bitstate+0x1>
 232:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 236:	f6 01       	movw	r30, r12
 238:	90 82       	st	Z, r9
 23a:	21 96       	adiw	r28, 0x01	; 1
 23c:	c3 30       	cpi	r28, 0x03	; 3
 23e:	d1 05       	cpc	r29, r1
 240:	09 f0       	breq	.+2      	; 0x244 <__vector_14+0x12e>
 242:	ab cf       	rjmp	.-170    	; 0x19a <__vector_14+0x84>
 244:	17 c0       	rjmp	.+46     	; 0x274 <__vector_14+0x15e>
 246:	0f 2e       	mov	r0, r31
 248:	f4 e1       	ldi	r31, 0x14	; 20
 24a:	ef 2e       	mov	r14, r31
 24c:	f1 e0       	ldi	r31, 0x01	; 1
 24e:	ff 2e       	mov	r15, r31
 250:	f0 2d       	mov	r31, r0
 252:	0e e0       	ldi	r16, 0x0E	; 14
 254:	11 e0       	ldi	r17, 0x01	; 1
 256:	c0 e0       	ldi	r28, 0x00	; 0
 258:	d0 e0       	ldi	r29, 0x00	; 0
 25a:	aa 24       	eor	r10, r10
 25c:	a3 94       	inc	r10
 25e:	b1 2c       	mov	r11, r1
 260:	0f 2e       	mov	r0, r31
 262:	fc eb       	ldi	r31, 0xBC	; 188
 264:	cf 2e       	mov	r12, r31
 266:	d1 2c       	mov	r13, r1
 268:	f0 2d       	mov	r31, r0
 26a:	0f 2e       	mov	r0, r31
 26c:	f4 e9       	ldi	r31, 0x94	; 148
 26e:	9f 2e       	mov	r9, r31
 270:	f0 2d       	mov	r31, r0
 272:	93 cf       	rjmp	.-218    	; 0x19a <__vector_14+0x84>
 274:	ff 91       	pop	r31
 276:	ef 91       	pop	r30
 278:	df 91       	pop	r29
 27a:	cf 91       	pop	r28
 27c:	bf 91       	pop	r27
 27e:	af 91       	pop	r26
 280:	9f 91       	pop	r25
 282:	8f 91       	pop	r24
 284:	7f 91       	pop	r23
 286:	6f 91       	pop	r22
 288:	5f 91       	pop	r21
 28a:	4f 91       	pop	r20
 28c:	3f 91       	pop	r19
 28e:	2f 91       	pop	r18
 290:	1f 91       	pop	r17
 292:	0f 91       	pop	r16
 294:	ff 90       	pop	r15
 296:	ef 90       	pop	r14
 298:	df 90       	pop	r13
 29a:	cf 90       	pop	r12
 29c:	bf 90       	pop	r11
 29e:	af 90       	pop	r10
 2a0:	9f 90       	pop	r9
 2a2:	0f 90       	pop	r0
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	0f 90       	pop	r0
 2a8:	1f 90       	pop	r1
 2aa:	18 95       	reti

000002ac <timer_Init>:
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	84 bd       	out	0x24, r24	; 36
 2b0:	96 e0       	ldi	r25, 0x06	; 6
 2b2:	97 bd       	out	0x27, r25	; 39
 2b4:	ee e6       	ldi	r30, 0x6E	; 110
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	80 83       	st	Z, r24
 2ba:	78 94       	sei
 2bc:	84 e0       	ldi	r24, 0x04	; 4
 2be:	85 bd       	out	0x25, r24	; 37
 2c0:	14 bc       	out	0x24, r1	; 36
 2c2:	15 bc       	out	0x25, r1	; 37
 2c4:	16 bc       	out	0x26, r1	; 38
 2c6:	8f e9       	ldi	r24, 0x9F	; 159
 2c8:	87 bd       	out	0x27, r24	; 39
 2ca:	85 b5       	in	r24, 0x25	; 37
 2cc:	82 60       	ori	r24, 0x02	; 2
 2ce:	85 bd       	out	0x25, r24	; 37
 2d0:	85 b5       	in	r24, 0x25	; 37
 2d2:	81 60       	ori	r24, 0x01	; 1
 2d4:	85 bd       	out	0x25, r24	; 37
 2d6:	80 81       	ld	r24, Z
 2d8:	82 60       	ori	r24, 0x02	; 2
 2da:	80 83       	st	Z, r24
 2dc:	78 94       	sei
 2de:	08 95       	ret

000002e0 <rgb_set>:
 2e0:	00 97       	sbiw	r24, 0x00	; 0
 2e2:	19 f0       	breq	.+6      	; 0x2ea <rgb_set+0xa>
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	a1 f0       	breq	.+40     	; 0x310 <rgb_set+0x30>
 2e8:	08 95       	ret
 2ea:	e4 e1       	ldi	r30, 0x14	; 20
 2ec:	f1 e0       	ldi	r31, 0x01	; 1
 2ee:	db 01       	movw	r26, r22
 2f0:	8c 91       	ld	r24, X
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	91 83       	std	Z+1, r25	; 0x01
 2f6:	80 83       	st	Z, r24
 2f8:	11 96       	adiw	r26, 0x01	; 1
 2fa:	8c 91       	ld	r24, X
 2fc:	11 97       	sbiw	r26, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	93 83       	std	Z+3, r25	; 0x03
 302:	82 83       	std	Z+2, r24	; 0x02
 304:	12 96       	adiw	r26, 0x02	; 2
 306:	8c 91       	ld	r24, X
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	95 83       	std	Z+5, r25	; 0x05
 30c:	84 83       	std	Z+4, r24	; 0x04
 30e:	08 95       	ret
 310:	ee e0       	ldi	r30, 0x0E	; 14
 312:	f1 e0       	ldi	r31, 0x01	; 1
 314:	db 01       	movw	r26, r22
 316:	8c 91       	ld	r24, X
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	91 83       	std	Z+1, r25	; 0x01
 31c:	80 83       	st	Z, r24
 31e:	11 96       	adiw	r26, 0x01	; 1
 320:	8c 91       	ld	r24, X
 322:	11 97       	sbiw	r26, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	93 83       	std	Z+3, r25	; 0x03
 328:	82 83       	std	Z+2, r24	; 0x02
 32a:	12 96       	adiw	r26, 0x02	; 2
 32c:	8c 91       	ld	r24, X
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	95 83       	std	Z+5, r25	; 0x05
 332:	84 83       	std	Z+4, r24	; 0x04
 334:	08 95       	ret

00000336 <rpm_write>:
 336:	0f 93       	push	r16
 338:	1f 93       	push	r17
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
 33e:	c8 2f       	mov	r28, r24
 340:	09 2f       	mov	r16, r25
 342:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_init>
 346:	82 e7       	ldi	r24, 0x72	; 114
 348:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 34c:	8c 2f       	mov	r24, r28
 34e:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 352:	cc eb       	ldi	r28, 0xBC	; 188
 354:	d0 e0       	ldi	r29, 0x00	; 0
 356:	14 e9       	ldi	r17, 0x94	; 148
 358:	18 83       	st	Y, r17
 35a:	84 e7       	ldi	r24, 0x74	; 116
 35c:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
 360:	80 2f       	mov	r24, r16
 362:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 366:	18 83       	st	Y, r17
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	08 95       	ret

00000372 <main>:
{
    /* Replace with your application code */
    while (1) 
    {
	//test RPM Bar
	twi_init(); 
 372:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_init>
	timer_Init();
 376:	0e 94 56 01 	call	0x2ac	; 0x2ac <timer_Init>
	rpm_write(0x0); //clear bar
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	0e 94 9b 01 	call	0x336	; 0x336 <rpm_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 382:	2f ef       	ldi	r18, 0xFF	; 255
 384:	89 e6       	ldi	r24, 0x69	; 105
 386:	98 e1       	ldi	r25, 0x18	; 24
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	80 40       	sbci	r24, 0x00	; 0
 38c:	90 40       	sbci	r25, 0x00	; 0
 38e:	e1 f7       	brne	.-8      	; 0x388 <main+0x16>
 390:	00 c0       	rjmp	.+0      	; 0x392 <main+0x20>
 392:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b1010101010101010); //turn on odd leds
 394:	8a ea       	ldi	r24, 0xAA	; 170
 396:	9a ea       	ldi	r25, 0xAA	; 170
 398:	0e 94 9b 01 	call	0x336	; 0x336 <rpm_write>
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	89 e6       	ldi	r24, 0x69	; 105
 3a0:	98 e1       	ldi	r25, 0x18	; 24
 3a2:	21 50       	subi	r18, 0x01	; 1
 3a4:	80 40       	sbci	r24, 0x00	; 0
 3a6:	90 40       	sbci	r25, 0x00	; 0
 3a8:	e1 f7       	brne	.-8      	; 0x3a2 <main+0x30>
 3aa:	00 c0       	rjmp	.+0      	; 0x3ac <main+0x3a>
 3ac:	00 00       	nop
	_delay_ms(500);
	rpm_write(0b0101010101010101); //turn on even leds
 3ae:	85 e5       	ldi	r24, 0x55	; 85
 3b0:	95 e5       	ldi	r25, 0x55	; 85
 3b2:	0e 94 9b 01 	call	0x336	; 0x336 <rpm_write>
 3b6:	2f ef       	ldi	r18, 0xFF	; 255
 3b8:	89 e6       	ldi	r24, 0x69	; 105
 3ba:	98 e1       	ldi	r25, 0x18	; 24
 3bc:	21 50       	subi	r18, 0x01	; 1
 3be:	80 40       	sbci	r24, 0x00	; 0
 3c0:	90 40       	sbci	r25, 0x00	; 0
 3c2:	e1 f7       	brne	.-8      	; 0x3bc <main+0x4a>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <main+0x54>
 3c6:	00 00       	nop
	_delay_ms(500);

	//test RGB LED Indicator
	for (int i =0; i<2; i++)
 3c8:	c0 e0       	ldi	r28, 0x00	; 0
 3ca:	d0 e0       	ldi	r29, 0x00	; 0
	{
		rgb_set(i, BLACK);
 3cc:	6a e1       	ldi	r22, 0x1A	; 26
 3ce:	71 e0       	ldi	r23, 0x01	; 1
 3d0:	ce 01       	movw	r24, r28
 3d2:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
 3d6:	2f ef       	ldi	r18, 0xFF	; 255
 3d8:	85 ea       	ldi	r24, 0xA5	; 165
 3da:	9e e0       	ldi	r25, 0x0E	; 14
 3dc:	21 50       	subi	r18, 0x01	; 1
 3de:	80 40       	sbci	r24, 0x00	; 0
 3e0:	90 40       	sbci	r25, 0x00	; 0
 3e2:	e1 f7       	brne	.-8      	; 0x3dc <main+0x6a>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <main+0x74>
 3e6:	00 00       	nop
		_delay_ms(300);
		rgb_set(i, WHITE);
 3e8:	60 e0       	ldi	r22, 0x00	; 0
 3ea:	71 e0       	ldi	r23, 0x01	; 1
 3ec:	ce 01       	movw	r24, r28
 3ee:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
 3f2:	2f ef       	ldi	r18, 0xFF	; 255
 3f4:	85 ea       	ldi	r24, 0xA5	; 165
 3f6:	9e e0       	ldi	r25, 0x0E	; 14
 3f8:	21 50       	subi	r18, 0x01	; 1
 3fa:	80 40       	sbci	r24, 0x00	; 0
 3fc:	90 40       	sbci	r25, 0x00	; 0
 3fe:	e1 f7       	brne	.-8      	; 0x3f8 <main+0x86>
 400:	00 c0       	rjmp	.+0      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 402:	00 00       	nop
		_delay_ms(300);
		rgb_set(i, BLACK);
 404:	6a e1       	ldi	r22, 0x1A	; 26
 406:	71 e0       	ldi	r23, 0x01	; 1
 408:	ce 01       	movw	r24, r28
 40a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
 40e:	2f ef       	ldi	r18, 0xFF	; 255
 410:	85 ea       	ldi	r24, 0xA5	; 165
 412:	9e e0       	ldi	r25, 0x0E	; 14
 414:	21 50       	subi	r18, 0x01	; 1
 416:	80 40       	sbci	r24, 0x00	; 0
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
		_delay_ms(300);
		rgb_set(i, RED);
 420:	69 e0       	ldi	r22, 0x09	; 9
 422:	71 e0       	ldi	r23, 0x01	; 1
 424:	ce 01       	movw	r24, r28
 426:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
 42a:	2f ef       	ldi	r18, 0xFF	; 255
 42c:	85 ea       	ldi	r24, 0xA5	; 165
 42e:	9e e0       	ldi	r25, 0x0E	; 14
 430:	21 50       	subi	r18, 0x01	; 1
 432:	80 40       	sbci	r24, 0x00	; 0
 434:	90 40       	sbci	r25, 0x00	; 0
 436:	e1 f7       	brne	.-8      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 438:	00 c0       	rjmp	.+0      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 43a:	00 00       	nop
		_delay_ms(300);
		rgb_set(i, GREEN);
 43c:	66 e0       	ldi	r22, 0x06	; 6
 43e:	71 e0       	ldi	r23, 0x01	; 1
 440:	ce 01       	movw	r24, r28
 442:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
 446:	2f ef       	ldi	r18, 0xFF	; 255
 448:	85 ea       	ldi	r24, 0xA5	; 165
 44a:	9e e0       	ldi	r25, 0x0E	; 14
 44c:	21 50       	subi	r18, 0x01	; 1
 44e:	80 40       	sbci	r24, 0x00	; 0
 450:	90 40       	sbci	r25, 0x00	; 0
 452:	e1 f7       	brne	.-8      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 454:	00 c0       	rjmp	.+0      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 456:	00 00       	nop
		_delay_ms(300);
		rgb_set(i, BLUE);
 458:	63 e0       	ldi	r22, 0x03	; 3
 45a:	71 e0       	ldi	r23, 0x01	; 1
 45c:	ce 01       	movw	r24, r28
 45e:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
 462:	2f ef       	ldi	r18, 0xFF	; 255
 464:	85 ea       	ldi	r24, 0xA5	; 165
 466:	9e e0       	ldi	r25, 0x0E	; 14
 468:	21 50       	subi	r18, 0x01	; 1
 46a:	80 40       	sbci	r24, 0x00	; 0
 46c:	90 40       	sbci	r25, 0x00	; 0
 46e:	e1 f7       	brne	.-8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 472:	00 00       	nop
		_delay_ms(300);
		rgb_set(i, BLACK);
 474:	6a e1       	ldi	r22, 0x1A	; 26
 476:	71 e0       	ldi	r23, 0x01	; 1
 478:	ce 01       	movw	r24, r28
 47a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <rgb_set>
	_delay_ms(500);
	rpm_write(0b0101010101010101); //turn on even leds
	_delay_ms(500);

	//test RGB LED Indicator
	for (int i =0; i<2; i++)
 47e:	21 96       	adiw	r28, 0x01	; 1
 480:	c2 30       	cpi	r28, 0x02	; 2
 482:	d1 05       	cpc	r29, r1
 484:	09 f0       	breq	.+2      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 486:	a2 cf       	rjmp	.-188    	; 0x3cc <main+0x5a>
		_delay_ms(300);
		rgb_set(i, BLACK);
	}

	//test LED indicators
	twi_start(LED_INDICATORS);
 488:	86 e7       	ldi	r24, 0x76	; 118
 48a:	0e 94 66 00 	call	0xcc	; 0xcc <twi_start>
	twi_write(0b00000001);
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 494:	2f ef       	ldi	r18, 0xFF	; 255
 496:	89 e6       	ldi	r24, 0x69	; 105
 498:	98 e1       	ldi	r25, 0x18	; 24
 49a:	21 50       	subi	r18, 0x01	; 1
 49c:	80 40       	sbci	r24, 0x00	; 0
 49e:	90 40       	sbci	r25, 0x00	; 0
 4a0:	e1 f7       	brne	.-8      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4a4:	00 00       	nop
	_delay_ms(500);
	twi_write(0b00000011);
 4a6:	83 e0       	ldi	r24, 0x03	; 3
 4a8:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 4ac:	2f ef       	ldi	r18, 0xFF	; 255
 4ae:	89 e6       	ldi	r24, 0x69	; 105
 4b0:	98 e1       	ldi	r25, 0x18	; 24
 4b2:	21 50       	subi	r18, 0x01	; 1
 4b4:	80 40       	sbci	r24, 0x00	; 0
 4b6:	90 40       	sbci	r25, 0x00	; 0
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4bc:	00 00       	nop
	_delay_ms(500);
	twi_write(0b00000010);
 4be:	82 e0       	ldi	r24, 0x02	; 2
 4c0:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
 4c4:	2f ef       	ldi	r18, 0xFF	; 255
 4c6:	89 e6       	ldi	r24, 0x69	; 105
 4c8:	98 e1       	ldi	r25, 0x18	; 24
 4ca:	21 50       	subi	r18, 0x01	; 1
 4cc:	80 40       	sbci	r24, 0x00	; 0
 4ce:	90 40       	sbci	r25, 0x00	; 0
 4d0:	e1 f7       	brne	.-8      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d4:	00 00       	nop
	_delay_ms(500);
	twi_write(0b00000000);
 4d6:	80 e0       	ldi	r24, 0x00	; 0
 4d8:	0e 94 7e 00 	call	0xfc	; 0xfc <twi_write>
	LCD_cmd(0xC0);
	LCD_str("AHHHHH");
	_delay_ms(500);
	LCD_clr();
    */ 
	}
 4dc:	4a cf       	rjmp	.-364    	; 0x372 <main>

000004de <_exit>:
 4de:	f8 94       	cli

000004e0 <__stop_program>:
 4e0:	ff cf       	rjmp	.-2      	; 0x4e0 <__stop_program>
