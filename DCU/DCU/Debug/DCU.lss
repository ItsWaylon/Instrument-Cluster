
DCU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000028c  00000320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000028c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010e  0080010e  0000032e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000032e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000360  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000af3  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d3  00000000  00000000  00000efb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000469  00000000  00000000  000016ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000148  00000000  00000000  00001b38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b2  00000000  00000000  00001c80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000330  00000000  00000000  00002132  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002462  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e8       	ldi	r30, 0x8C	; 140
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 31       	cpi	r26, 0x10	; 16
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 43 01 	call	0x286	; 0x286 <main>
  9e:	0c 94 44 01 	jmp	0x288	; 0x288 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <twi_start>:
	twi_stop();
	
	twi_start(0x21);
	twi_write(byte2);
	twi_stop();
}
  a6:	94 ea       	ldi	r25, 0xA4	; 164
  a8:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  ac:	ec eb       	ldi	r30, 0xBC	; 188
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	90 81       	ld	r25, Z
  b2:	99 23       	and	r25, r25
  b4:	ec f7       	brge	.-6      	; 0xb0 <twi_start+0xa>
  b6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  ba:	88 0f       	add	r24, r24
  bc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  c0:	84 e8       	ldi	r24, 0x84	; 132
  c2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  c6:	ec eb       	ldi	r30, 0xBC	; 188
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	80 81       	ld	r24, Z
  cc:	88 23       	and	r24, r24
  ce:	ec f7       	brge	.-6      	; 0xca <twi_start+0x24>
  d0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  d4:	08 95       	ret

000000d6 <twi_write>:
  d6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  da:	84 e8       	ldi	r24, 0x84	; 132
  dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  e0:	ec eb       	ldi	r30, 0xBC	; 188
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	88 23       	and	r24, r24
  e8:	ec f7       	brge	.-6      	; 0xe4 <twi_write+0xe>
  ea:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  ee:	08 95       	ret

000000f0 <__vector_14>:
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	9f 92       	push	r9
  fc:	af 92       	push	r10
  fe:	bf 92       	push	r11
 100:	cf 92       	push	r12
 102:	df 92       	push	r13
 104:	ef 92       	push	r14
 106:	ff 92       	push	r15
 108:	0f 93       	push	r16
 10a:	1f 93       	push	r17
 10c:	2f 93       	push	r18
 10e:	3f 93       	push	r19
 110:	4f 93       	push	r20
 112:	5f 93       	push	r21
 114:	6f 93       	push	r22
 116:	7f 93       	push	r23
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	af 93       	push	r26
 11e:	bf 93       	push	r27
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	ef 93       	push	r30
 126:	ff 93       	push	r31
 128:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 12c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 130:	01 96       	adiw	r24, 0x01	; 1
 132:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
 136:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
 13a:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 13e:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 142:	84 36       	cpi	r24, 0x64	; 100
 144:	91 05       	cpc	r25, r1
 146:	0c f4       	brge	.+2      	; 0x14a <__vector_14+0x5a>
 148:	6b c0       	rjmp	.+214    	; 0x220 <__vector_14+0x130>
 14a:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__data_end+0x1>
 14e:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end>
 152:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
 156:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 15a:	80 e2       	ldi	r24, 0x20	; 32
 15c:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_start>
 160:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 164:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 168:	0e 94 6b 00 	call	0xd6	; 0xd6 <twi_write>
 16c:	84 e9       	ldi	r24, 0x94	; 148
 16e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 172:	56 c0       	rjmp	.+172    	; 0x220 <__vector_14+0x130>
 174:	f7 01       	movw	r30, r14
 176:	21 91       	ld	r18, Z+
 178:	31 91       	ld	r19, Z+
 17a:	7f 01       	movw	r14, r30
 17c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 180:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 184:	28 17       	cp	r18, r24
 186:	39 07       	cpc	r19, r25
 188:	e1 f4       	brne	.+56     	; 0x1c2 <__vector_14+0xd2>
 18a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 18e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 192:	95 01       	movw	r18, r10
 194:	0c 2e       	mov	r0, r28
 196:	02 c0       	rjmp	.+4      	; 0x19c <__vector_14+0xac>
 198:	22 0f       	add	r18, r18
 19a:	33 1f       	adc	r19, r19
 19c:	0a 94       	dec	r0
 19e:	e2 f7       	brpl	.-8      	; 0x198 <__vector_14+0xa8>
 1a0:	82 2b       	or	r24, r18
 1a2:	93 2b       	or	r25, r19
 1a4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 1a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 1ac:	80 e2       	ldi	r24, 0x20	; 32
 1ae:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_start>
 1b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1b6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1ba:	0e 94 6b 00 	call	0xd6	; 0xd6 <twi_write>
 1be:	f6 01       	movw	r30, r12
 1c0:	90 82       	st	Z, r9
 1c2:	f8 01       	movw	r30, r16
 1c4:	21 91       	ld	r18, Z+
 1c6:	31 91       	ld	r19, Z+
 1c8:	8f 01       	movw	r16, r30
 1ca:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 1ce:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 1d2:	28 17       	cp	r18, r24
 1d4:	39 07       	cpc	r19, r25
 1d6:	f1 f4       	brne	.+60     	; 0x214 <__vector_14+0x124>
 1d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1dc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1e0:	9e 01       	movw	r18, r28
 1e2:	2b 5f       	subi	r18, 0xFB	; 251
 1e4:	3f 4f       	sbci	r19, 0xFF	; 255
 1e6:	a5 01       	movw	r20, r10
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <__vector_14+0xfe>
 1ea:	44 0f       	add	r20, r20
 1ec:	55 1f       	adc	r21, r21
 1ee:	2a 95       	dec	r18
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <__vector_14+0xfa>
 1f2:	84 2b       	or	r24, r20
 1f4:	95 2b       	or	r25, r21
 1f6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 1fa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 1fe:	80 e2       	ldi	r24, 0x20	; 32
 200:	0e 94 53 00 	call	0xa6	; 0xa6 <twi_start>
 204:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 208:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 20c:	0e 94 6b 00 	call	0xd6	; 0xd6 <twi_write>
 210:	f6 01       	movw	r30, r12
 212:	90 82       	st	Z, r9
 214:	21 96       	adiw	r28, 0x01	; 1
 216:	c3 30       	cpi	r28, 0x03	; 3
 218:	d1 05       	cpc	r29, r1
 21a:	09 f0       	breq	.+2      	; 0x21e <__vector_14+0x12e>
 21c:	ab cf       	rjmp	.-170    	; 0x174 <__vector_14+0x84>
 21e:	17 c0       	rjmp	.+46     	; 0x24e <__vector_14+0x15e>
 220:	0f 2e       	mov	r0, r31
 222:	f8 e0       	ldi	r31, 0x08	; 8
 224:	ef 2e       	mov	r14, r31
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	ff 2e       	mov	r15, r31
 22a:	f0 2d       	mov	r31, r0
 22c:	02 e0       	ldi	r16, 0x02	; 2
 22e:	11 e0       	ldi	r17, 0x01	; 1
 230:	c0 e0       	ldi	r28, 0x00	; 0
 232:	d0 e0       	ldi	r29, 0x00	; 0
 234:	aa 24       	eor	r10, r10
 236:	a3 94       	inc	r10
 238:	b1 2c       	mov	r11, r1
 23a:	0f 2e       	mov	r0, r31
 23c:	fc eb       	ldi	r31, 0xBC	; 188
 23e:	cf 2e       	mov	r12, r31
 240:	d1 2c       	mov	r13, r1
 242:	f0 2d       	mov	r31, r0
 244:	0f 2e       	mov	r0, r31
 246:	f4 e9       	ldi	r31, 0x94	; 148
 248:	9f 2e       	mov	r9, r31
 24a:	f0 2d       	mov	r31, r0
 24c:	93 cf       	rjmp	.-218    	; 0x174 <__vector_14+0x84>
 24e:	ff 91       	pop	r31
 250:	ef 91       	pop	r30
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	bf 91       	pop	r27
 258:	af 91       	pop	r26
 25a:	9f 91       	pop	r25
 25c:	8f 91       	pop	r24
 25e:	7f 91       	pop	r23
 260:	6f 91       	pop	r22
 262:	5f 91       	pop	r21
 264:	4f 91       	pop	r20
 266:	3f 91       	pop	r19
 268:	2f 91       	pop	r18
 26a:	1f 91       	pop	r17
 26c:	0f 91       	pop	r16
 26e:	ff 90       	pop	r15
 270:	ef 90       	pop	r14
 272:	df 90       	pop	r13
 274:	cf 90       	pop	r12
 276:	bf 90       	pop	r11
 278:	af 90       	pop	r10
 27a:	9f 90       	pop	r9
 27c:	0f 90       	pop	r0
 27e:	0f be       	out	0x3f, r0	; 63
 280:	0f 90       	pop	r0
 282:	1f 90       	pop	r1
 284:	18 95       	reti

00000286 <main>:
#include <util/twi.h>
#include "i2c.h"
#include "led.h"

enum state{state_wake, state_main, state_settings, state_debug,};
int main(void) {
 286:	ff cf       	rjmp	.-2      	; 0x286 <main>

00000288 <_exit>:
 288:	f8 94       	cli

0000028a <__stop_program>:
 28a:	ff cf       	rjmp	.-2      	; 0x28a <__stop_program>
